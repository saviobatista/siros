[tool.poetry]
name = "siros"
version = "1.0.0"
description = "Python web crawler and prediction system for Brazilian flight movements from ANAC's SIROS database"
authors = ["Savio <saviobatista@email.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/saviobatista/siros"
repository = "https://github.com/saviobatista/siros"
documentation = "https://github.com/saviobatista/siros/blob/main/README.md"
keywords = [
    "aviation",
    "flight-data",
    "web-scraping",
    "air-traffic-control",
    "brazil",
    "anac",
    "siros",
    "prediction",
    "selenium"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
packages = [{include = "lib"}]

[tool.poetry.dependencies]
python = "^3.8.1"
selenium = "^4.15.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.9.0"
flake8 = "^6.1.0"
mypy = "^1.6.0"
pre-commit = "^3.4.0"

[tool.poetry.scripts]
siros = "siros:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | tmp
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]